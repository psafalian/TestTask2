<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Mocha Tests" time="0.536" tests="16" failures="4">
  <testsuite name="Root Suite" timestamp="2024-06-24T17:31:16" tests="0" time="0.000" failures="0">
  </testsuite>
  <testsuite name="stock_trades_api_hard" timestamp="2024-06-24T17:31:16" tests="16" file="/Users/peto/Desktop/2. NodeJS_ Stock Trades API project/test/index.spec.js" time="0.526" failures="4">
    <testcase name="stock_trades_api_hard should create a new trade of buy type" time="0.343" classname="should create a new trade of buy type">
    </testcase>
    <testcase name="stock_trades_api_hard should create a new trade of sell type" time="0.011" classname="should create a new trade of sell type">
    </testcase>
    <testcase name="stock_trades_api_hard should return 400 if the payload has an invalid type" time="0.004" classname="should return 400 if the payload has an invalid type">
    </testcase>
    <testcase name="stock_trades_api_hard should return 400 if the number of shares exceeds the limit" time="0.002" classname="should return 400 if the number of shares exceeds the limit">
    </testcase>
    <testcase name="stock_trades_api_hard should return 400 if the number of shares is below the limit" time="0.004" classname="should return 400 if the number of shares is below the limit">
    </testcase>
    <testcase name="stock_trades_api_hard should fetch all the trades" time="0.041" classname="should fetch all the trades">
      <failure message="expected [ { id: 1, type: &apos;buy&apos;, …(5) }, …(5) ] to deeply equal [ { id: 3, type: &apos;sell&apos;, …(5) }, …(3) ]" type="AssertionError"><![CDATA[AssertionError: expected [ { id: 1, type: 'buy', …(5) }, …(5) ] to deeply equal [ { id: 3, type: 'sell', …(5) }, …(3) ]
    at Context.<anonymous> (test/index.spec.js:107:30)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

      + expected - actual

       [
         {
      -    "id": 1
      -    "price": 134
      -    "shares": 30
      -    "symbol": "ABX"
      -    "timestamp": 1531522701000
      -    "type": "buy"
      -    "user_id": 23
      -  }
      -  {
      -    "id": 2
      -    "price": 133
      -    "shares": 12
      -    "symbol": "AAC"
      -    "timestamp": 1521522701000
      -    "type": "sell"
      -    "user_id": 23
      -  }
      -  {
           "id": 3
           "price": 111
           "shares": 12
           "symbol": "AAC"
      ]]></failure>
    </testcase>
    <testcase name="stock_trades_api_hard should fetch no trades if the type filter value does not exist" time="0.022" classname="should fetch no trades if the type filter value does not exist">
    </testcase>
    <testcase name="stock_trades_api_hard should fetch all trades for a user" time="0.016" classname="should fetch all trades for a user">
      <failure message="expected [ { id: 1, type: &apos;buy&apos;, …(5) }, …(7) ] to deeply equal [ Array(2) ]" type="AssertionError"><![CDATA[AssertionError: expected [ { id: 1, type: 'buy', …(5) }, …(7) ] to deeply equal [ Array(2) ]
    at Context.<anonymous> (test/index.spec.js:121:30)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

      + expected - actual

       [
         {
      -    "id": 1
      -    "price": 134
      -    "shares": 30
      -    "symbol": "ABX"
      -    "timestamp": 1531522701000
      -    "type": "buy"
      -    "user_id": 23
      -  }
      -  {
      -    "id": 2
      -    "price": 133
      -    "shares": 12
      -    "symbol": "AAC"
      -    "timestamp": 1521522701000
      -    "type": "sell"
      -    "user_id": 23
      -  }
      -  {
      -    "id": 5
      -    "price": 133
      -    "shares": 12
      -    "symbol": "AAC"
      -    "timestamp": 1521522701000
      -    "type": "sell"
      -    "user_id": 23
      -  }
      -  {
      -    "id": 6
      -    "price": 134
      -    "shares": 30
      -    "symbol": "ABX"
      -    "timestamp": 1531522701000
      -    "type": "buy"
      -    "user_id": 23
      -  }
      -  {
      -    "id": 9
      -    "price": 133
      -    "shares": 12
      -    "symbol": "AAC"
      -    "timestamp": 1521522701000
      -    "type": "sell"
      -    "user_id": 23
      -  }
      -  {
      -    "id": 10
      -    "price": 134
      -    "shares": 30
      -    "symbol": "ABX"
      -    "timestamp": 1531522701000
      -    "type": "buy"
      -    "user_id": 23
      -  }
      -  {
           "id": 13
           "price": 133
           "shares": 12
           "symbol": "AAC"
      ]]></failure>
    </testcase>
    <testcase name="stock_trades_api_hard should fetch no trades if user filter value does not exist" time="0.012" classname="should fetch no trades if user filter value does not exist">
    </testcase>
    <testcase name="stock_trades_api_hard should fetch all buy trades for a user" time="0.014" classname="should fetch all buy trades for a user">
      <failure message="expected [ { id: 1, type: &apos;buy&apos;, …(5) }, …(5) ] to deeply equal [ { id: 22, type: &apos;buy&apos;, …(5) } ]" type="AssertionError"><![CDATA[AssertionError: expected [ { id: 1, type: 'buy', …(5) }, …(5) ] to deeply equal [ { id: 22, type: 'buy', …(5) } ]
    at Context.<anonymous> (test/index.spec.js:135:30)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

      + expected - actual

       [
         {
      -    "id": 1
      -    "price": 134
      -    "shares": 30
      -    "symbol": "ABX"
      -    "timestamp": 1531522701000
      -    "type": "buy"
      -    "user_id": 23
      -  }
      -  {
      -    "id": 6
      -    "price": 134
      -    "shares": 30
      -    "symbol": "ABX"
      -    "timestamp": 1531522701000
      -    "type": "buy"
      -    "user_id": 23
      -  }
      -  {
      -    "id": 10
      -    "price": 134
      -    "shares": 30
      -    "symbol": "ABX"
      -    "timestamp": 1531522701000
      -    "type": "buy"
      -    "user_id": 23
      -  }
      -  {
      -    "id": 14
      -    "price": 134
      -    "shares": 30
      -    "symbol": "ABX"
      -    "timestamp": 1531522701000
      -    "type": "buy"
      -    "user_id": 23
      -  }
      -  {
      -    "id": 18
      -    "price": 134
      -    "shares": 30
      -    "symbol": "ABX"
      -    "timestamp": 1531522701000
      -    "type": "buy"
      -    "user_id": 23
      -  }
      -  {
           "id": 22
           "price": 134
           "shares": 30
           "symbol": "ABX"
      ]]></failure>
    </testcase>
    <testcase name="stock_trades_api_hard should fetch all sell trades for a user" time="0.012" classname="should fetch all sell trades for a user">
      <failure message="expected [ { id: 2, type: &apos;sell&apos;, …(5) }, …(6) ] to deeply equal [ { id: 25, type: &apos;sell&apos;, …(5) } ]" type="AssertionError"><![CDATA[AssertionError: expected [ { id: 2, type: 'sell', …(5) }, …(6) ] to deeply equal [ { id: 25, type: 'sell', …(5) } ]
    at Context.<anonymous> (test/index.spec.js:142:30)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

      + expected - actual

       [
         {
      -    "id": 2
      -    "price": 133
      -    "shares": 12
      -    "symbol": "AAC"
      -    "timestamp": 1521522701000
      -    "type": "sell"
      -    "user_id": 23
      -  }
      -  {
      -    "id": 5
      -    "price": 133
      -    "shares": 12
      -    "symbol": "AAC"
      -    "timestamp": 1521522701000
      -    "type": "sell"
      -    "user_id": 23
      -  }
      -  {
      -    "id": 9
      -    "price": 133
      -    "shares": 12
      -    "symbol": "AAC"
      -    "timestamp": 1521522701000
      -    "type": "sell"
      -    "user_id": 23
      -  }
      -  {
      -    "id": 13
      -    "price": 133
      -    "shares": 12
      -    "symbol": "AAC"
      -    "timestamp": 1521522701000
      -    "type": "sell"
      -    "user_id": 23
      -  }
      -  {
      -    "id": 17
      -    "price": 133
      -    "shares": 12
      -    "symbol": "AAC"
      -    "timestamp": 1521522701000
      -    "type": "sell"
      -    "user_id": 23
      -  }
      -  {
      -    "id": 21
      -    "price": 133
      -    "shares": 12
      -    "symbol": "AAC"
      -    "timestamp": 1521522701000
      -    "type": "sell"
      -    "user_id": 23
      -  }
      -  {
           "id": 25
           "price": 133
           "shares": 12
           "symbol": "AAC"
      ]]></failure>
    </testcase>
    <testcase name="stock_trades_api_hard should fetch a single trade" time="0.006" classname="should fetch a single trade">
    </testcase>
    <testcase name="stock_trades_api_hard should get 404 if the trade ID does not exist" time="0.003" classname="should get 404 if the trade ID does not exist">
    </testcase>
    <testcase name="stock_trades_api_hard should get 405 for a put request to /trades/:id" time="0.003" classname="should get 405 for a put request to /trades/:id">
    </testcase>
    <testcase name="stock_trades_api_hard should get 405 for a patch request to /trades/:id" time="0.004" classname="should get 405 for a patch request to /trades/:id">
    </testcase>
    <testcase name="stock_trades_api_hard should get 405 for a delete request to /trades/:id" time="0.004" classname="should get 405 for a delete request to /trades/:id">
    </testcase>
  </testsuite>
</testsuites>